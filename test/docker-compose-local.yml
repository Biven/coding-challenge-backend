version: '3.8'
services:
  application:
    build: ./
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/bp-applicants
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#      - bootstrap.servers=kafka:9092
#      - kafka.bootstrapAddress=kafka:9092

  postgres:
    image: "postgres:13.1-alpine"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - type: volume
        source: postgresql-data-volume
        target: /var/lib/postgresql/data
      - type: bind
        source: ./schema_bp_applicants.sql
        target: /docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgresql-data-volume:
    name: bp-applicants-postgres-data
